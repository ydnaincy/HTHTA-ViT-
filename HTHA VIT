{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1GdaGooaxmUC1Glz5rLu2_3RdE1_W92i5","timestamp":1747577308252}],"gpuType":"T4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"ba67a45073cb4629b88df03f2982436f":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_efb1e439c8f341ec807b6d69171f2c9a","IPY_MODEL_fa71129fe7ff4b29ae3c1d2d0586ffb1","IPY_MODEL_c4734651db6843ec99574313a47d6bb1"],"layout":"IPY_MODEL_781df3a613e64c15bf8e360f0124f6f0"}},"efb1e439c8f341ec807b6d69171f2c9a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8a2540c876bd4cf4b9f66060d691b863","placeholder":"​","style":"IPY_MODEL_8c3831788b08400d8a13788fecad8e4b","value":"config.json: 100%"}},"fa71129fe7ff4b29ae3c1d2d0586ffb1":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_ccbfd41aa2a74f428d8fc358008b8ccf","max":502,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c9e605a2509949b7afe2312c8a567f9f","value":502}},"c4734651db6843ec99574313a47d6bb1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1aa9bd3ba7304a579a17ab7c15d10fe7","placeholder":"​","style":"IPY_MODEL_503f88d59aef422ca2e368172d92ab39","value":" 502/502 [00:00&lt;00:00, 48.2kB/s]"}},"781df3a613e64c15bf8e360f0124f6f0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8a2540c876bd4cf4b9f66060d691b863":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8c3831788b08400d8a13788fecad8e4b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ccbfd41aa2a74f428d8fc358008b8ccf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c9e605a2509949b7afe2312c8a567f9f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"1aa9bd3ba7304a579a17ab7c15d10fe7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"503f88d59aef422ca2e368172d92ab39":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6906bf8c27d04237b3fb19cf228eb55c":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_01d9691e9c124076924d780c314e695b","IPY_MODEL_c2f6f42e879044e094c66d70950bedf3","IPY_MODEL_29579c15483f4ba1996cad34e5eebc10"],"layout":"IPY_MODEL_98f35594b096432c9454c721f0c105e6"}},"01d9691e9c124076924d780c314e695b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_68026e970730416eaeb38ce4f51ec448","placeholder":"​","style":"IPY_MODEL_f2f3e20732674d2eb99b2566708f00ea","value":"model.safetensors: 100%"}},"c2f6f42e879044e094c66d70950bedf3":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_cd85dd9afc5e4f679ca811f968546e1d","max":345579424,"min":0,"orientation":"horizontal","style":"IPY_MODEL_9d104192230c4c57a1801afff72d3857","value":345579424}},"29579c15483f4ba1996cad34e5eebc10":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c5627be87c3f4b84b072806f497eb5d0","placeholder":"​","style":"IPY_MODEL_6e4871e8461c4ed3b65f7ab0ac3accd5","value":" 346M/346M [00:01&lt;00:00, 243MB/s]"}},"98f35594b096432c9454c721f0c105e6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"68026e970730416eaeb38ce4f51ec448":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f2f3e20732674d2eb99b2566708f00ea":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"cd85dd9afc5e4f679ca811f968546e1d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9d104192230c4c57a1801afff72d3857":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"c5627be87c3f4b84b072806f497eb5d0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6e4871e8461c4ed3b65f7ab0ac3accd5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c1NDkZMzrkf-","executionInfo":{"status":"ok","timestamp":1747577475604,"user_tz":-330,"elapsed":126634,"user":{"displayName":"R B","userId":"02308995349135226937"}},"outputId":"38269c1d-9c5e-405e-b5e4-a06b48db12c3"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: transformers in /usr/local/lib/python3.11/dist-packages (4.51.3)\n","Collecting ptflops\n","  Downloading ptflops-0.7.4-py3-none-any.whl.metadata (9.4 kB)\n","Requirement already satisfied: seaborn in /usr/local/lib/python3.11/dist-packages (0.13.2)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from transformers) (3.18.0)\n","Requirement already satisfied: huggingface-hub<1.0,>=0.30.0 in /usr/local/lib/python3.11/dist-packages (from transformers) (0.31.2)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.11/dist-packages (from transformers) (2.0.2)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from transformers) (24.2)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.11/dist-packages (from transformers) (6.0.2)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.11/dist-packages (from transformers) (2024.11.6)\n","Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from transformers) (2.32.3)\n","Requirement already satisfied: tokenizers<0.22,>=0.21 in /usr/local/lib/python3.11/dist-packages (from transformers) (0.21.1)\n","Requirement already satisfied: safetensors>=0.4.3 in /usr/local/lib/python3.11/dist-packages (from transformers) (0.5.3)\n","Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.11/dist-packages (from transformers) (4.67.1)\n","Requirement already satisfied: torch>=2.0 in /usr/local/lib/python3.11/dist-packages (from ptflops) (2.6.0+cu124)\n","Requirement already satisfied: pandas>=1.2 in /usr/local/lib/python3.11/dist-packages (from seaborn) (2.2.2)\n","Requirement already satisfied: matplotlib!=3.6.1,>=3.4 in /usr/local/lib/python3.11/dist-packages (from seaborn) (3.10.0)\n","Requirement already satisfied: fsspec>=2023.5.0 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub<1.0,>=0.30.0->transformers) (2025.3.2)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.11/dist-packages (from huggingface-hub<1.0,>=0.30.0->transformers) (4.13.2)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (1.3.2)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (4.58.0)\n","Requirement already satisfied: kiwisolver>=1.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (1.4.8)\n","Requirement already satisfied: pillow>=8 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (11.2.1)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (3.2.3)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.11/dist-packages (from matplotlib!=3.6.1,>=3.4->seaborn) (2.9.0.post0)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.2->seaborn) (2025.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.2->seaborn) (2025.2)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.11/dist-packages (from torch>=2.0->ptflops) (3.4.2)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from torch>=2.0->ptflops) (3.1.6)\n","Collecting nvidia-cuda-nvrtc-cu12==12.4.127 (from torch>=2.0->ptflops)\n","  Downloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cuda-runtime-cu12==12.4.127 (from torch>=2.0->ptflops)\n","  Downloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cuda-cupti-cu12==12.4.127 (from torch>=2.0->ptflops)\n","  Downloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Collecting nvidia-cudnn-cu12==9.1.0.70 (from torch>=2.0->ptflops)\n","  Downloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Collecting nvidia-cublas-cu12==12.4.5.8 (from torch>=2.0->ptflops)\n","  Downloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cufft-cu12==11.2.1.3 (from torch>=2.0->ptflops)\n","  Downloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-curand-cu12==10.3.5.147 (from torch>=2.0->ptflops)\n","  Downloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cusolver-cu12==11.6.1.9 (from torch>=2.0->ptflops)\n","  Downloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Collecting nvidia-cusparse-cu12==12.3.1.170 (from torch>=2.0->ptflops)\n","  Downloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Requirement already satisfied: nvidia-cusparselt-cu12==0.6.2 in /usr/local/lib/python3.11/dist-packages (from torch>=2.0->ptflops) (0.6.2)\n","Requirement already satisfied: nvidia-nccl-cu12==2.21.5 in /usr/local/lib/python3.11/dist-packages (from torch>=2.0->ptflops) (2.21.5)\n","Requirement already satisfied: nvidia-nvtx-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=2.0->ptflops) (12.4.127)\n","Collecting nvidia-nvjitlink-cu12==12.4.127 (from torch>=2.0->ptflops)\n","  Downloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Requirement already satisfied: triton==3.2.0 in /usr/local/lib/python3.11/dist-packages (from torch>=2.0->ptflops) (3.2.0)\n","Requirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.11/dist-packages (from torch>=2.0->ptflops) (1.13.1)\n","Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from sympy==1.13.1->torch>=2.0->ptflops) (1.3.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->transformers) (3.4.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->transformers) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->transformers) (2.4.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->transformers) (2025.4.26)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.7->matplotlib!=3.6.1,>=3.4->seaborn) (1.17.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->torch>=2.0->ptflops) (3.0.2)\n","Downloading ptflops-0.7.4-py3-none-any.whl (19 kB)\n","Downloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl (363.4 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m3.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (13.8 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.8/13.8 MB\u001b[0m \u001b[31m29.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (24.6 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m24.6/24.6 MB\u001b[0m \u001b[31m57.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (883 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m883.7/883.7 kB\u001b[0m \u001b[31m44.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl (664.8 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m1.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl (211.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m6.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl (56.3 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m13.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl (127.9 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m7.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl (207.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m7.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (21.1 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m89.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: nvidia-nvjitlink-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, nvidia-cusparse-cu12, nvidia-cudnn-cu12, nvidia-cusolver-cu12, ptflops\n","  Attempting uninstall: nvidia-nvjitlink-cu12\n","    Found existing installation: nvidia-nvjitlink-cu12 12.5.82\n","    Uninstalling nvidia-nvjitlink-cu12-12.5.82:\n","      Successfully uninstalled nvidia-nvjitlink-cu12-12.5.82\n","  Attempting uninstall: nvidia-curand-cu12\n","    Found existing installation: nvidia-curand-cu12 10.3.6.82\n","    Uninstalling nvidia-curand-cu12-10.3.6.82:\n","      Successfully uninstalled nvidia-curand-cu12-10.3.6.82\n","  Attempting uninstall: nvidia-cufft-cu12\n","    Found existing installation: nvidia-cufft-cu12 11.2.3.61\n","    Uninstalling nvidia-cufft-cu12-11.2.3.61:\n","      Successfully uninstalled nvidia-cufft-cu12-11.2.3.61\n","  Attempting uninstall: nvidia-cuda-runtime-cu12\n","    Found existing installation: nvidia-cuda-runtime-cu12 12.5.82\n","    Uninstalling nvidia-cuda-runtime-cu12-12.5.82:\n","      Successfully uninstalled nvidia-cuda-runtime-cu12-12.5.82\n","  Attempting uninstall: nvidia-cuda-nvrtc-cu12\n","    Found existing installation: nvidia-cuda-nvrtc-cu12 12.5.82\n","    Uninstalling nvidia-cuda-nvrtc-cu12-12.5.82:\n","      Successfully uninstalled nvidia-cuda-nvrtc-cu12-12.5.82\n","  Attempting uninstall: nvidia-cuda-cupti-cu12\n","    Found existing installation: nvidia-cuda-cupti-cu12 12.5.82\n","    Uninstalling nvidia-cuda-cupti-cu12-12.5.82:\n","      Successfully uninstalled nvidia-cuda-cupti-cu12-12.5.82\n","  Attempting uninstall: nvidia-cublas-cu12\n","    Found existing installation: nvidia-cublas-cu12 12.5.3.2\n","    Uninstalling nvidia-cublas-cu12-12.5.3.2:\n","      Successfully uninstalled nvidia-cublas-cu12-12.5.3.2\n","  Attempting uninstall: nvidia-cusparse-cu12\n","    Found existing installation: nvidia-cusparse-cu12 12.5.1.3\n","    Uninstalling nvidia-cusparse-cu12-12.5.1.3:\n","      Successfully uninstalled nvidia-cusparse-cu12-12.5.1.3\n","  Attempting uninstall: nvidia-cudnn-cu12\n","    Found existing installation: nvidia-cudnn-cu12 9.3.0.75\n","    Uninstalling nvidia-cudnn-cu12-9.3.0.75:\n","      Successfully uninstalled nvidia-cudnn-cu12-9.3.0.75\n","  Attempting uninstall: nvidia-cusolver-cu12\n","    Found existing installation: nvidia-cusolver-cu12 11.6.3.83\n","    Uninstalling nvidia-cusolver-cu12-11.6.3.83:\n","      Successfully uninstalled nvidia-cusolver-cu12-11.6.3.83\n","Successfully installed nvidia-cublas-cu12-12.4.5.8 nvidia-cuda-cupti-cu12-12.4.127 nvidia-cuda-nvrtc-cu12-12.4.127 nvidia-cuda-runtime-cu12-12.4.127 nvidia-cudnn-cu12-9.1.0.70 nvidia-cufft-cu12-11.2.1.3 nvidia-curand-cu12-10.3.5.147 nvidia-cusolver-cu12-11.6.1.9 nvidia-cusparse-cu12-12.3.1.170 nvidia-nvjitlink-cu12-12.4.127 ptflops-0.7.4\n"]}],"source":["!pip install transformers ptflops seaborn\n","\n","import os\n","import torch\n","import torch.nn as nn\n","import torch.nn.functional as F\n","import torchvision\n","import torchvision.transforms as transforms\n","from torch.utils.data import DataLoader\n","from transformers import ViTModel\n","from tqdm import tqdm\n","import numpy as np\n","import random\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.metrics import classification_report, confusion_matrix, accuracy_score, f1_score\n","from ptflops import get_model_complexity_info\n","\n","device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n"]},{"cell_type":"code","source":["transform = transforms.Compose([\n","    transforms.Resize((224, 224)),\n","    transforms.ToTensor()\n","])\n","\n","# CIFAR-10\n","cifar10_train = torchvision.datasets.CIFAR10(root='./data', train=True, download=True, transform=transform)\n","cifar10_test = torchvision.datasets.CIFAR10(root='./data', train=False, download=True, transform=transform)\n","cifar10_train_loader = DataLoader(cifar10_train, batch_size=32, shuffle=True, num_workers=2)\n","cifar10_test_loader = DataLoader(cifar10_test, batch_size=32, shuffle=False, num_workers=2)\n","\n","# CIFAR-100\n","cifar100_train = torchvision.datasets.CIFAR100(root='./data', train=True, download=True, transform=transform)\n","cifar100_test = torchvision.datasets.CIFAR100(root='./data', train=False, download=True, transform=transform)\n","cifar100_train_loader = DataLoader(cifar100_train, batch_size=32, shuffle=True, num_workers=2)\n","cifar100_test_loader = DataLoader(cifar100_test, batch_size=32, shuffle=False, num_workers=2)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wbvWI8rfrx0r","executionInfo":{"status":"ok","timestamp":1747577497386,"user_tz":-330,"elapsed":21764,"user":{"displayName":"R B","userId":"02308995349135226937"}},"outputId":"ffccc28a-c2ee-4e9c-dc98-f2177c3f1ced"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 170M/170M [00:05<00:00, 29.2MB/s]\n","100%|██████████| 169M/169M [00:05<00:00, 29.6MB/s]\n"]}]},{"cell_type":"code","source":["!wget http://cs231n.stanford.edu/tiny-imagenet-200.zip\n","!unzip -q tiny-imagenet-200.zip"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2IfmNOlir0i5","executionInfo":{"status":"ok","timestamp":1747577522826,"user_tz":-330,"elapsed":25441,"user":{"displayName":"R B","userId":"02308995349135226937"}},"outputId":"95aee33f-5598-4e5f-e53c-42b52476eb66"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["--2025-05-18 14:11:37--  http://cs231n.stanford.edu/tiny-imagenet-200.zip\n","Resolving cs231n.stanford.edu (cs231n.stanford.edu)... 171.64.64.64\n","Connecting to cs231n.stanford.edu (cs231n.stanford.edu)|171.64.64.64|:80... connected.\n","HTTP request sent, awaiting response... 301 Moved Permanently\n","Location: https://cs231n.stanford.edu/tiny-imagenet-200.zip [following]\n","--2025-05-18 14:11:37--  https://cs231n.stanford.edu/tiny-imagenet-200.zip\n","Connecting to cs231n.stanford.edu (cs231n.stanford.edu)|171.64.64.64|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 248100043 (237M) [application/zip]\n","Saving to: ‘tiny-imagenet-200.zip’\n","\n","tiny-imagenet-200.z 100%[===================>] 236.61M  22.3MB/s    in 12s     \n","\n","2025-05-18 14:11:49 (20.0 MB/s) - ‘tiny-imagenet-200.zip’ saved [248100043/248100043]\n","\n"]}]},{"cell_type":"code","source":["tiny_train = torchvision.datasets.ImageFolder(root=\"./tiny-imagenet-200/train\", transform=transform)\n","tiny_test = torchvision.datasets.ImageFolder(root=\"./tiny-imagenet-200/val\", transform=transform)\n","\n","tiny_train_loader = DataLoader(tiny_train, batch_size=32, shuffle=True, num_workers=2)\n","tiny_test_loader = DataLoader(tiny_test, batch_size=32, shuffle=False, num_workers=2)\n","\n","tiny_classes = tiny_train.classes"],"metadata":{"id":"Xo_tmUqqr2Rj","executionInfo":{"status":"ok","timestamp":1747577523024,"user_tz":-330,"elapsed":195,"user":{"displayName":"R B","userId":"02308995349135226937"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["class HTHTAViTPlus(nn.Module):\n","    def __init__(self, num_classes):\n","        super(HTHTAViTPlus, self).__init__()\n","        self.vit = ViTModel.from_pretrained(\"google/vit-base-patch16-224-in21k\")\n","        self.gru = nn.GRU(768, 256, batch_first=True, bidirectional=True)\n","        self.attn = nn.MultiheadAttention(embed_dim=512, num_heads=4, batch_first=True)\n","        self.norm = nn.LayerNorm(512)\n","        self.cls_proj = nn.Linear(768, 256)\n","        self.bottleneck = nn.Sequential(\n","            nn.Linear(512, 256),\n","            nn.ReLU(),\n","            nn.Dropout(0.3)\n","        )\n","        self.classifier = nn.Linear(512, num_classes)\n","\n","    def forward(self, x):\n","        vit_out = self.vit(pixel_values=x).last_hidden_state\n","        cls_token = vit_out[:, 0]\n","        tokens = vit_out[:, 1:]\n","        gru_out, _ = self.gru(tokens)\n","        attn_out, _ = self.attn(gru_out, gru_out, gru_out)\n","        attn_out = self.norm(attn_out + gru_out)\n","        pooled = attn_out.mean(dim=1)\n","        fused = torch.cat([self.cls_proj(cls_token), self.bottleneck(pooled)], dim=1)\n","        return self.classifier(fused)\n","\n","    def get_attention_weights(self, x):\n","        vit_out = self.vit(pixel_values=x).last_hidden_state\n","        tokens = vit_out[:, 1:]\n","        gru_out, _ = self.gru(tokens)\n","        _, attn_weights = self.attn(gru_out, gru_out, gru_out)\n","        return attn_weights\n","class HTHTAViTPlus(nn.Module):\n","    def __init__(self, num_classes):\n","        super(HTHTAViTPlus, self).__init__()\n","        self.vit = ViTModel.from_pretrained(\"google/vit-base-patch16-224-in21k\")\n","        self.gru = nn.GRU(768, 256, batch_first=True, bidirectional=True)\n","        self.attn = nn.MultiheadAttention(embed_dim=512, num_heads=4, batch_first=True)\n","        self.norm = nn.LayerNorm(512)\n","        self.cls_proj = nn.Linear(768, 256)\n","        self.bottleneck = nn.Sequential(\n","            nn.Linear(512, 256),\n","            nn.ReLU(),\n","            nn.Dropout(0.3)\n","        )\n","        self.classifier = nn.Linear(512, num_classes)\n","\n","    def forward(self, x):\n","        vit_out = self.vit(pixel_values=x).last_hidden_state\n","        cls_token = vit_out[:, 0]\n","        tokens = vit_out[:, 1:]\n","        gru_out, _ = self.gru(tokens)\n","        attn_out, _ = self.attn(gru_out, gru_out, gru_out)\n","        attn_out = self.norm(attn_out + gru_out)\n","        pooled = attn_out.mean(dim=1)\n","        fused = torch.cat([self.cls_proj(cls_token), self.bottleneck(pooled)], dim=1)\n","        return self.classifier(fused)\n","\n","    def get_attention_weights(self, x):\n","        vit_out = self.vit(pixel_values=x).last_hidden_state\n","        tokens = vit_out[:, 1:]\n","        gru_out, _ = self.gru(tokens)\n","        _, attn_weights = self.attn(gru_out, gru_out, gru_out)\n","        return attn_weights\n"],"metadata":{"id":"D7zCNAGhr4XC","executionInfo":{"status":"ok","timestamp":1747577523030,"user_tz":-330,"elapsed":2,"user":{"displayName":"R B","userId":"02308995349135226937"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["def train_model(model, loader, criterion, optimizer, scheduler, epochs=5):\n","    model.train()\n","    for epoch in range(epochs):\n","        total_loss = 0\n","        for images, labels in tqdm(loader):\n","            images, labels = images.to(device), labels.to(device)\n","            outputs = model(images)\n","            loss = criterion(outputs, labels)\n","            optimizer.zero_grad()\n","            loss.backward()\n","            optimizer.step()\n","            total_loss += loss.item()\n","        scheduler.step()\n","        print(f\"Epoch {epoch+1} | Loss: {total_loss/len(loader):.4f}\")\n","\n","def evaluate_model(model, loader, class_names):\n","    model.eval()\n","    all_preds, all_labels = [], []\n","    with torch.no_grad():\n","        for images, labels in tqdm(loader):\n","            images = images.to(device)\n","            outputs = model(images)\n","            preds = torch.argmax(outputs, dim=1).cpu().numpy()\n","            all_preds.extend(preds)\n","            all_labels.extend(labels.numpy())\n","\n","    print(\"\\nClassification Report:\")\n","    print(classification_report(all_labels, all_preds, target_names=class_names))\n","    print(\"Confusion Matrix:\")\n","    cm = confusion_matrix(all_labels, all_preds)\n","    sns.heatmap(cm, annot=True, fmt='d', xticklabels=class_names, yticklabels=class_names)\n","    plt.title(\"Confusion Matrix\")\n","    plt.xlabel(\"Predicted\")\n","    plt.ylabel(\"True\")\n","    plt.show()\n","\n","    acc = accuracy_score(all_labels, all_preds)\n","    f1 = f1_score(all_labels, all_preds, average='macro')\n","    print(f\"\\nAccuracy: {acc:.4f}, Macro F1 Score: {f1:.4f}\")\n"],"metadata":{"id":"RxIgpQI4r6k0","executionInfo":{"status":"ok","timestamp":1747577523071,"user_tz":-330,"elapsed":40,"user":{"displayName":"R B","userId":"02308995349135226937"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":[" def analyze_flops(model):\n","    with torch.cuda.device(0):\n","        macs, params = get_model_complexity_info(\n","            model, (3, 224, 224), as_strings=True, print_per_layer_stat=False\n","        )\n","    print(f\"FLOPs: {macs}\")\n","    print(f\"Parameters: {params}\")"],"metadata":{"id":"6y4O3Fqbr8ec","executionInfo":{"status":"ok","timestamp":1747577523091,"user_tz":-330,"elapsed":16,"user":{"displayName":"R B","userId":"02308995349135226937"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"XhwLDNL6sHQi","executionInfo":{"status":"ok","timestamp":1747577523114,"user_tz":-330,"elapsed":24,"user":{"displayName":"R B","userId":"02308995349135226937"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["def visualize_attention(model, loader):\n","    model.eval()\n","    sample = next(iter(loader))[0][0].unsqueeze(0).to(device)  # (1, 3, 224, 224)\n","\n","    # Get attention weights (B, Heads, N, N)\n","    attn_weights = model.get_attention_weights(sample)  # Shape: (1, 4, 196, 196)\n","\n","    # Take average over heads\n","    mean_attn = attn_weights.mean(dim=1)[0].cpu().detach().numpy()  # (196, 196)\n","\n","    # Plot heatmap\n","    plt.figure(figsize=(10, 8))\n","    sns.heatmap(mean_attn, cmap='viridis')\n","    plt.title(\"Mean Attention Weights (Token × Token)\")\n","    plt.xlabel(\"Patch Index\")\n","    plt.ylabel(\"Patch Index\")\n","    plt.show()\n"],"metadata":{"id":"zur5bEKMsCbC","executionInfo":{"status":"ok","timestamp":1747577523453,"user_tz":-330,"elapsed":337,"user":{"displayName":"R B","userId":"02308995349135226937"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["\n","# For Tiny-ImageNet:\n","train_loader = tiny_train_loader\n","test_loader = tiny_test_loader\n","class_names = tiny_train.classes\n","num_classes = 200\n","\n","# === Run Training and Evaluation ===\n","model = HTHTAViTPlus(num_classes=num_classes).to(device)\n","criterion = nn.CrossEntropyLoss()\n","optimizer = torch.optim.AdamW(model.parameters(), lr=3e-5, weight_decay=1e-4)\n","scheduler = torch.optim.lr_scheduler.CosineAnnealingWarmRestarts(optimizer, T_0=5, T_mult=2)\n","\n","train_model(model, train_loader, criterion, optimizer, scheduler, epochs=5)\n","evaluate_model(model, test_loader, class_names)\n","analyze_flops(model)\n","visualize_attention(model, test_loader)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":369,"referenced_widgets":["ba67a45073cb4629b88df03f2982436f","efb1e439c8f341ec807b6d69171f2c9a","fa71129fe7ff4b29ae3c1d2d0586ffb1","c4734651db6843ec99574313a47d6bb1","781df3a613e64c15bf8e360f0124f6f0","8a2540c876bd4cf4b9f66060d691b863","8c3831788b08400d8a13788fecad8e4b","ccbfd41aa2a74f428d8fc358008b8ccf","c9e605a2509949b7afe2312c8a567f9f","1aa9bd3ba7304a579a17ab7c15d10fe7","503f88d59aef422ca2e368172d92ab39","6906bf8c27d04237b3fb19cf228eb55c","01d9691e9c124076924d780c314e695b","c2f6f42e879044e094c66d70950bedf3","29579c15483f4ba1996cad34e5eebc10","98f35594b096432c9454c721f0c105e6","68026e970730416eaeb38ce4f51ec448","f2f3e20732674d2eb99b2566708f00ea","cd85dd9afc5e4f679ca811f968546e1d","9d104192230c4c57a1801afff72d3857","c5627be87c3f4b84b072806f497eb5d0","6e4871e8461c4ed3b65f7ab0ac3accd5"]},"id":"x-0369hxsKkH","outputId":"39cbcb11-3dbe-4869-f12d-65bde14e4316"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/huggingface_hub/utils/_auth.py:94: UserWarning: \n","The secret `HF_TOKEN` does not exist in your Colab secrets.\n","To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n","You will be able to reuse this secret in all of your notebooks.\n","Please note that authentication is recommended but still optional to access public models or datasets.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/502 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ba67a45073cb4629b88df03f2982436f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/346M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6906bf8c27d04237b3fb19cf228eb55c"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["100%|██████████| 3125/3125 [54:03<00:00,  1.04s/it]\n"]},{"output_type":"stream","name":"stdout","text":["Epoch 1 | Loss: 1.5252\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 3125/3125 [54:01<00:00,  1.04s/it]\n"]},{"output_type":"stream","name":"stdout","text":["Epoch 2 | Loss: 0.3141\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 3125/3125 [54:02<00:00,  1.04s/it]\n"]},{"output_type":"stream","name":"stdout","text":["Epoch 3 | Loss: 0.1519\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 3125/3125 [54:05<00:00,  1.04s/it]\n"]},{"output_type":"stream","name":"stdout","text":["Epoch 4 | Loss: 0.0721\n"]},{"output_type":"stream","name":"stderr","text":[" 78%|███████▊  | 2435/3125 [42:07<12:01,  1.05s/it]"]}]}]}